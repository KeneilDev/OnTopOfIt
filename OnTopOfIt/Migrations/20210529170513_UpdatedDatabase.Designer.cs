// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnTopOfIt.Infrastructure;

namespace OnTopOfIt.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20210529170513_UpdatedDatabase")]
    partial class UpdatedDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnTopOfIt.Areas.Identity.Data.OnTopOfItUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnTopOfItUser");
                });

            modelBuilder.Entity("OnTopOfIt.Models.TodoItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnTopOfItUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("completeBy")
                        .HasColumnType("datetime2");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("repeatFriday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatMonday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatSaturday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatSunday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatThursday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatTuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("repeatWednesday")
                        .HasColumnType("bit");

                    b.Property<bool>("taskComplete")
                        .HasColumnType("bit");

                    b.Property<string>("timeofDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OnTopOfItUserId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("OnTopOfIt.Models.TodoItems", b =>
                {
                    b.HasOne("OnTopOfIt.Areas.Identity.Data.OnTopOfItUser", "OnTopOfItUser")
                        .WithMany("TodoList")
                        .HasForeignKey("OnTopOfItUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
